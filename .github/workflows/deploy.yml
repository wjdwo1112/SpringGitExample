name: CI/CD Workflow for test

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
  runs-on: self-hosted

  steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3

      with:
      java-version: '21'
      distribution: 'temurin'

    - name: Build project with Maven
      run: mvn clean package


    - name: Stop and remove old container
      shell: powershell
      run: |
        $containerName = "${{ secrets.DOCKER_CONTAINER_NAME }}"
        $existingContainer = docker ps -a --filter "name=$containerName" --format "{{.Names}}"
      if ($existingContainer -eq $containerName) { 
        Write-Host "Stopping and removing container: $containerName"
        docker stop $containerName
        docker rm $containerName
      } else {
        Write-Host "No container named $containerName found."
      }


    - name: Remover old Docker image
      shell: powershell
      run: |
        $imageName = "${{ secrets.DOCKER_IMAGE_NAME }}"
      try {
        Write-Host "Attempting to remove image: $imageName"
        docker rmi -f $imageName
        Write-Host "Image $imageName removed successfully."
      } catch {
        Write-Host "Failed to remove image: $imageName"
        Write-Host "Error: $_"
      }


    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .


    - name: Run new Docker container
      run: |
        docker run -d --name ${{ secrets.DOCKER_CONTAINER_NAME }} -p 8080:8080 ${{ secrets.DOCKER_IMAGE_NAME }}


    - name: Check running containers
      run: docker ps	